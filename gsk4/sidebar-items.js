initSidebarItems({"constant":[["NONE_RENDERER",""],["NONE_RENDER_NODE",""]],"enum":[["BlendMode","The blend modes available for render nodes."],["Corner","The corner indices used by `RoundedRect`."],["GLUniformType","This defines the types of the uniforms that `GskGLShaders` declare. It defines both what the type is called in the GLSL shader code, and what the corresponding C type is on the Gtk side."],["RenderNodeType","The type of a node determines what the node is rendering."],["ScalingFilter","The filters used when scaling texture data."],["SerializationError","Errors that can happen during (de)serialization."],["TransformCategory","The categories of matrices relevant for GSK and GTK. Note that any category includes matrices of all later categories. So if you want to for example check if a matrix is a 2D matrix, `category >= GSK_TRANSFORM_CATEGORY_2D` is the way to do this."]],"mod":[["prelude","Traits intended for blanket imports."]],"struct":[["BlendNode",""],["BlurNode",""],["BorderNode",""],["BroadwayRenderer","Implements"],["CairoNode",""],["CairoRenderer","Implements"],["ClipNode",""],["ColorMatrixNode",""],["ColorNode",""],["ColorStop",""],["ConicGradientNode",""],["ContainerNode",""],["CrossFadeNode",""],["DebugNode",""],["GLRenderer","Implements"],["GLShader","An object representing a GL shader program."],["GLShaderBuilder",""],["GLShaderNode",""],["InsetShadowNode",""],["LinearGradientNode",""],["OpacityNode",""],["OutsetShadowNode",""],["ParseLocation",""],["RadialGradientNode",""],["RenderNode","A node in the render tree."],["Renderer","Base type for the object managing the rendering pipeline for a `gdk::Surface`."],["RepeatNode",""],["RepeatingLinearGradientNode",""],["RepeatingRadialGradientNode",""],["RoundedClipNode",""],["RoundedRect",""],["ShaderArgsBuilder","An object to build the uniforms data for a `GLShader`."],["Shadow",""],["ShadowNode",""],["TextNode",""],["TextureNode",""],["Transform","The `GskTransform` structure contains only private data."],["TransformNode",""],["VulkanRenderer","Implements"]],"trait":[["IsRenderNode",""],["RendererExt","Trait containing all `Renderer` methods."]]});